// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetCoreSsrTest.Context;

#nullable disable

namespace NetCoreSsrTest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917202611_MovieLinks")]
    partial class MovieLinks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("NetCoreSsrTest.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpeningCrawl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Producer")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExternalUid")
                        .IsUnique();

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MoviePerson", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("MoviePeople");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MovieSpecies", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId", "SpeciesId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("MovieSpecies");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MovieStarship", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarshipId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId", "StarshipId");

                    b.HasIndex("StarshipId");

                    b.ToTable("MovieStarships");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MovieUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MovieVehicle", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId", "VehicleId");

                    b.HasIndex("VehicleId");

                    b.ToTable("MovieVehicles");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExternalUid")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExternalUid")
                        .IsUnique();

                    b.ToTable("Species");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.Starship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExternalUid")
                        .IsUnique();

                    b.ToTable("Starships");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExternalUid")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MoviePerson", b =>
                {
                    b.HasOne("NetCoreSsrTest.Domain.Movie", "Movie")
                        .WithMany("People")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetCoreSsrTest.Domain.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MovieSpecies", b =>
                {
                    b.HasOne("NetCoreSsrTest.Domain.Movie", "Movie")
                        .WithMany("Species")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetCoreSsrTest.Domain.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MovieStarship", b =>
                {
                    b.HasOne("NetCoreSsrTest.Domain.Movie", "Movie")
                        .WithMany("Starships")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetCoreSsrTest.Domain.Starship", "Starship")
                        .WithMany()
                        .HasForeignKey("StarshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Starship");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.MovieVehicle", b =>
                {
                    b.HasOne("NetCoreSsrTest.Domain.Movie", "Movie")
                        .WithMany("Vehicles")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetCoreSsrTest.Domain.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("NetCoreSsrTest.Domain.Movie", b =>
                {
                    b.Navigation("People");

                    b.Navigation("Species");

                    b.Navigation("Starships");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
